@page "/tictactoe"
@rendermode InteractiveServer
@inject IJSRuntime JsRuntime

<PageTitle>Tic-Tac-Toe</PageTitle>

<h3>Tic-Tac-Toe</h3>

<button class="btn btn-primary disabled">Player vs Player</button>
<!--<button class="btn btn-primary disabled">Player vs AI</button>-->
<button class="btn btn-danger" @onclick="gameLogic.RestartBoard">Restart</button>

<br />
<br />
<br />
<br />


<button class="btn @gameLogic.currentBoardData[0,0].Color @gameLogic.currentBoardData[0,0].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[0, 0])"> @gameLogic.currentBoardData[0, 0].Text  </button>
<button class="btn @gameLogic.currentBoardData[0,1].Color @gameLogic.currentBoardData[0,1].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[0, 1])"> @gameLogic.currentBoardData[0, 1].Text </button>
<button class="btn @gameLogic.currentBoardData[0,2].Color @gameLogic.currentBoardData[0,2].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[0, 2])"> @gameLogic.currentBoardData[0, 2].Text </button>
<br />
<br />
<button class="btn @gameLogic.currentBoardData[1,0].Color @gameLogic.currentBoardData[1,0].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[1, 0])"> @gameLogic.currentBoardData[1, 0].Text </button>
<button class="btn @gameLogic.currentBoardData[1,1].Color @gameLogic.currentBoardData[1,1].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[1, 1])"> @gameLogic.currentBoardData[1, 1].Text </button>
<button class="btn @gameLogic.currentBoardData[1,2].Color @gameLogic.currentBoardData[1,2].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[1, 2])"> @gameLogic.currentBoardData[1, 2].Text </button>
<br />
<br />
<button class="btn @gameLogic.currentBoardData[2,0].Color @gameLogic.currentBoardData[2,0].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[2, 0])"> @gameLogic.currentBoardData[2, 0].Text </button>
<button class="btn @gameLogic.currentBoardData[2,1].Color @gameLogic.currentBoardData[2,1].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[2, 1])"> @gameLogic.currentBoardData[2, 1].Text </button>
<button class="btn @gameLogic.currentBoardData[2,2].Color @gameLogic.currentBoardData[2,2].DisabledText w-f50" @onclick="() => gameLogic.BoardCellOnClick(gameLogic.currentBoardData[2, 2])"> @gameLogic.currentBoardData[2, 2].Text </button>



@code {
    GameLogic gameLogic = new GameLogic();

    public async void MessageHandler(string message)
    {
        await Alert(message);
    }

    private async Task Alert(string message)
    {
        await JsRuntime.InvokeAsync<object>("Alert", message);
    }


    // Equivelent of "OnLoad" 
    protected override void OnAfterRender(bool firstRender)
    {
        // execute conditionally for loading data, otherwise this will load
        // every time the page refreshes
        if (firstRender)
        {
            gameLogic.RaiseMessage += MessageHandler;
        }
    }
}
